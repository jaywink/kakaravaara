---
- vars_files:
    - config.yaml
  hosts: "{{ hosts }}"
  remote_user: "{{ remote_user }}"
  sudo: yes
  tasks:
    # postgresql
    - include: common/postgresql.yaml
    # dependencies
    - include: dependencies/python.yaml
    # system
    - name: User exists
      user: name=kakaravaara
    - name: Add www-data to user group
      user: name=www-data groups=kakaravaara append=yes
    - name: Create private key directory
      file: path=/home/kakaravaara/.ssh state=directory owner=kakaravaara
    - name: Add private ssh keys
      copy:
        content: "{{ private_repo_key }}"
        dest: /home/kakaravaara/.ssh/private_repo_key
        mode: 0600
    - lineinfile: dest=/root/.ssh/config line="Host bitbucket.org" create=yes
    - lineinfile: dest=/root/.ssh/config line="    IdentityFile /home/kakaravaara/.ssh/private_repo_key" insertafter="^Host bitbucket.org"
    - name: Ensure github.com is a known host
      lineinfile:
        dest: /root/.ssh/known_hosts
        create: yes
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
        regexp: "^github\\.com"
    - name: Ensure bitbucket.org is a known host
      lineinfile:
        dest: /root/.ssh/known_hosts
        create: yes
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan -t rsa bitbucket.org') }}"
        regexp: "^bitbucket\\.org"
    # application
    - name: Get latest application code
      git: accept_hostkey=yes dest=/home/kakaravaara/kakaravaara repo=https://github.com/jaywink/kakaravaara.git
    - name: Install app requirements
      pip: requirements=/home/kakaravaara/kakaravaara/requirements/project.txt virtualenv=/home/kakaravaara/venv
    - name: Install Python support for PostgreSQL
      pip: name=psycopg2 virtualenv=/home/kakaravaara/venv
    - name: Create local settings
      template: dest=/home/kakaravaara/kakaravaara/local_settings.py src=templates/local_settings.py
    - name: Make sure home directory is owned by user
      file: path=/home/kakaravaara/kakaravaara owner=kakaravaara group=kakaravaara recurse=yes
    - name: Make sure venv directory is owned by user
      file: path=/home/kakaravaara/venv owner=kakaravaara group=kakaravaara recurse=yes
    - name: Media directory
      file: path=/home/kakaravaara/kakaravaara/static/media owner=kakaravaara group=kakaravaara mode=0770 state=directory
    - command: find /home/kakaravaara/kakaravaara/static/media -type d -exec chmod 0770 {} \;
    - command: find /home/kakaravaara/kakaravaara/static/media -type f -exec chmod 0660 {} \;
    - name: Clean db
      when: cleandb is defined
      postgresql_db: name={{ db_name }} owner={{ db_user }} state=absent
    - when: cleandb is defined
      postgresql_db: name={{ db_name }} owner={{ db_user }} state=present
    - name: Sync db
      when: initialize is defined
      shell: /home/kakaravaara/venv/bin/python manage.py syncdb --all --noinput
      args:
        chdir: /home/kakaravaara/kakaravaara
    - name: Fake migrations
      when: initialize is defined
      shell: /home/kakaravaara/venv/bin/python manage.py migrate --fake --noinput
      args:
        chdir: /home/kakaravaara/kakaravaara
    - name: Migrate db
      when: initialize is not defined
      django_manage: app_path=/home/kakaravaara/kakaravaara command=migrate virtualenv=/home/kakaravaara/venv
    - name: Collect statics
      django_manage: app_path=/home/kakaravaara/kakaravaara command=collectstatic virtualenv=/home/kakaravaara/venv
    # web server
    - name: Apache configuration
      template: dest=/etc/apache2/sites-available/kakaravaara.conf src=templates/apache.conf
    - name: Apache SSL cert
      copy:
          content: "{{ ssl_cert }}"
          dest: /etc/ssl/certs/{{ hostname }}.crt
    - name: Apache SSL key
      copy:
          content: "{{ ssl_key }}"
          dest: /etc/ssl/private/{{ hostname }}.key
    - name: Apache SSL chain
      copy:
          content: "{{ ssl_chain }}"
          dest: /etc/ssl/certs/{{ hostname }}.chain.pem
    - include: common/apache_modules.yaml
    - name: Enable Apache site
      command: a2ensite kakaravaara
    - name: Apache restart
      service: name=apache2 state=restarted
